version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jasper_postgres
    environment:
      POSTGRES_DB: jasper_voice
      POSTGRES_USER: jasper_user
      POSTGRES_PASSWORD: jasper_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - jasper_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jasper_user -d jasper_voice"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: jasper_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@jasper.ai
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - jasper_network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: jasper_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: jasper_user
      RABBITMQ_DEFAULT_PASS: jasper_password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"      # AMQP protocol port
      - "15672:15672"    # Management UI port
    networks:
      - jasper_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3  

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  jasper_network:
    driver: bridge 